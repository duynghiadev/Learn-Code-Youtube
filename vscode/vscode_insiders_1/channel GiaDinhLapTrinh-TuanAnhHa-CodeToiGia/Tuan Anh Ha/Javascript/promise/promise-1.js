/**
 * - V√≠ d·ª• n√†y trong file markdown ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è
 *
 * - H√†m Math.round() trong JavaScript l√†m tr√≤n s·ªë v·ªÅ gi√° tr·ªã nguy√™n g·∫ßn nh·∫•t. N·∫øu s·ªë th·∫≠p ph√¢n l√† 0.5 ho·∫∑c l·ªõn h∆°n, n√≥ s·∫Ω l√†m tr√≤n l√™n; n·∫øu s·ªë th·∫≠p ph√¢n nh·ªè h∆°n 0.5, n√≥ s·∫Ω l√†m tr√≤n xu·ªëng.
 */
// H√†m gi·∫£ l·∫≠p vi·ªác t·∫£i d·ªØ li·ªáu t·ª´ m·ªôt ngu·ªìn n√†o ƒë√≥
function fetchData(source) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const success = Math.random() < 0.8 // 80% c∆° h·ªôi th√†nh c√¥ng
      console.log('success:', Math.round(success), success)
      // L√†m tr√≤n s·ªë n·∫øu c·∫ßn thi·∫øt
      // const roundedNumber = Math.round(success)
      // console.log(roundedNumber)
      if (success) {
        resolve(`D·ªØ li·ªáu t·ª´ ${source}`)
      } else {
        reject(`L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´ ${source}`)
      }
    }, Math.random() * 2000) // Gi·∫£ s·ª≠ vi·ªác t·∫£i d·ªØ li·ªáu m·∫•t t·ª´ 0 ƒë·∫øn 2000ms
  })
}

// H√†m ch√≠nh ƒë·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ nhi·ªÅu ngu·ªìn
function processMultipleDataSources() {
  const sources = ['Ngu·ªìn A', 'Ngu·ªìn B', 'Ngu·ªìn C']

  const promises = sources.map((source) => {
    return fetchData(source)
      .then((data) => {
        console.log('data:', data)
        console.log(`D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω t·ª´ ${source}: ${data}`)
        return data.toUpperCase()
      })
      .catch((error) => {
        console.error(`L·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ ${source}: ${error}`)
        throw error // N√©m l·ªói ƒë·ªÉ d·ª´ng chu·ªói Promise n·∫øu c√≥ l·ªói t·ª´ m·ªôt ngu·ªìn n√†o ƒë√≥
      })
  })

  return Promise.all(promises) // N·∫øu nh∆∞ t·∫•t c·∫£ d·ªØ li·ªáu th√†nh c√¥ng h·∫øt th√¨ n√≥ s·∫Ω ch·∫°y v√¥ Promise.all
    .then((results) => {
      console.log('K·∫øt qu·∫£ cu·ªëi c√πng:', results)
    })
    .catch((error) => {
      console.error('L·ªói trong qu√° tr√¨nh x·ª≠ l√Ω:', error)
    })
}

// G·ªçi h√†m ch√≠nh ƒë·ªÉ th·ª±c hi·ªán c√¥ng vi·ªác ph·ª©c t·∫°p
processMultipleDataSources()
