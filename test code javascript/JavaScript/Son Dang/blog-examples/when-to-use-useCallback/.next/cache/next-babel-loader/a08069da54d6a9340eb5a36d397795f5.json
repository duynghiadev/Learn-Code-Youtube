{"ast":null,"code":"var _jsxFileName = \"E:\\\\study code\\\\Study Code Project Youtube\\\\Learn Code YouTube\\\\test code javascript\\\\JavaScript\\\\Son Dang\\\\blog-examples\\\\when-to-use-useCallback\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, List, ListItem } from \"@material-ui/core\";\nimport { ADD_TODO, TODOS } from \"queries/endpoints\";\nimport TaskInput from \"components/TaskInput\";\nimport TaskListItem from \"components/TaskListItem\";\nimport { useEffect, useState } from \"react\";\nimport { useFetch } from \"queries/hooks/useFetch\";\nimport { usePost } from \"queries/hooks/usePost\";\n\nfunction Home() {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n  const [fetchData, {\n    loading,\n    error\n  }] = useFetch(TODOS);\n  useEffect(() => {\n    fetchData().then(data => {\n      setTasks(data);\n    });\n  }, []);\n  const [postData, {\n    loading: createLoading,\n    error: createError\n  }] = usePost(ADD_TODO);\n\n  const handleAddTask = async task => {\n    // update local\n    const updateTasks = [task, ...tasks];\n    setTasks(updateTasks);\n    return postData(task);\n  };\n\n  if (createError) {\n    alert(`Create unsuccessful: ${createError}`);\n  }\n\n  return __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(TaskInput, {\n    isLoading: createLoading,\n    onAdd: handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), loading && \"Loading data...\", error && error.message, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, tasks.length <= 0 ? __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Empty!!!\") : tasks.map(task => {\n    return __jsx(TaskListItem, {\n      key: task.id,\n      status: task.status,\n      taskId: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, task.title);\n  })));\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/study code/Study Code Project Youtube/Learn Code YouTube/test code javascript/JavaScript/Son Dang/blog-examples/when-to-use-useCallback/pages/index.tsx"],"names":["Container","List","ListItem","ADD_TODO","TODOS","TaskInput","TaskListItem","useEffect","useState","useFetch","usePost","Home","tasks","setTasks","fetchData","loading","error","then","data","postData","createLoading","createError","handleAddTask","task","updateTasks","alert","message","length","map","id","status","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,QAA1B,QAA0C,mBAA1C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAkB,EAAlB,CAAlC;AACA,QAAM,CAACM,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,IAAkCP,QAAQ,CAACL,KAAD,CAAhD;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,GAAGG,IAAZ,CAAkBC,IAAD,IAAU;AACzBL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM,CAACC,QAAD,EAAW;AAAEJ,IAAAA,OAAO,EAAEK,aAAX;AAA0BJ,IAAAA,KAAK,EAAEK;AAAjC,GAAX,IAA6DX,OAAO,CAACP,QAAD,CAA1E;;AAEA,QAAMmB,aAAa,GAAG,MAAOC,IAAP,IAA+B;AACnD;AACA,UAAMC,WAA4B,GAAG,CAACD,IAAD,EAAO,GAAGX,KAAV,CAArC;AACAC,IAAAA,QAAQ,CAACW,WAAD,CAAR;AAEA,WAAOL,QAAQ,CAACI,IAAD,CAAf;AACD,GAND;;AAQA,MAAIF,WAAJ,EAAiB;AACfI,IAAAA,KAAK,CAAE,wBAAuBJ,WAAY,EAArC,CAAL;AACD;;AAED,SACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,aAAtB;AAAqC,IAAA,KAAK,EAAEE,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGP,OAAO,IAAI,iBAHd,EAIGC,KAAK,IAAIA,KAAK,CAACU,OAJlB,EAKE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACe,MAAN,IAAgB,CAAhB,GACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAGCf,KAAK,CAACgB,GAAN,CAAWL,IAAD,IAAyB;AACjC,WACE,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACM,EAAxB;AAA4B,MAAA,MAAM,EAAEN,IAAI,CAACO,MAAzC;AAAiD,MAAA,MAAM,EAAEP,IAAI,CAACM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACQ,KADR,CADF;AAKD,GAND,CAJJ,CALF,CADF;AAqBD;;AAED,eAAepB,IAAf","sourcesContent":["import { Container, List, ListItem } from \"@material-ui/core\";\nimport { ADD_TODO, TODOS } from \"queries/endpoints\";\nimport TaskInput from \"components/TaskInput\";\nimport TaskListItem from \"components/TaskListItem\";\nimport { useEffect, useState } from \"react\";\nimport { TaskPropsType } from \"types\";\nimport { useFetch } from \"queries/hooks/useFetch\";\nimport { usePost } from \"queries/hooks/usePost\";\n\nfunction Home() {\n  const [tasks, setTasks] = useState<TaskPropsType[]>([]);\n  const [fetchData, { loading, error }] = useFetch(TODOS);\n\n  useEffect(() => {\n    fetchData().then((data) => {\n      setTasks(data);\n    });\n  }, []);\n\n  const [postData, { loading: createLoading, error: createError }] = usePost(ADD_TODO);\n\n  const handleAddTask = async (task: TaskPropsType) => {\n    // update local\n    const updateTasks: TaskPropsType[] = [task, ...tasks];\n    setTasks(updateTasks);\n\n    return postData(task);\n  };\n\n  if (createError) {\n    alert(`Create unsuccessful: ${createError}`);\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <TaskInput isLoading={createLoading} onAdd={handleAddTask} />\n\n      {loading && \"Loading data...\"}\n      {error && error.message}\n      <List>\n        {tasks.length <= 0 ? (\n          <ListItem>Empty!!!</ListItem>\n        ) : (\n          tasks.map((task: TaskPropsType) => {\n            return (\n              <TaskListItem key={task.id} status={task.status} taskId={task.id}>\n                {task.title}\n              </TaskListItem>\n            );\n          })\n        )}\n      </List>\n    </Container>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}