{"ast":null,"code":"import { useState } from \"react\";\nexport function usePost(endpoint) {\n  const {\n    0: {\n      loading,\n      error\n    },\n    1: setFetchResult\n  } = useState({\n    loading: false\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState();\n\n  const postData = async input => {\n    try {\n      setFetchResult({\n        loading: true\n      });\n      const post = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(input)\n      });\n      const response = await post.json();\n      setData(response);\n    } catch (err) {\n      setFetchResult({\n        loading: false,\n        error: err.message\n      });\n    }\n\n    setFetchResult({\n      loading: false\n    });\n  };\n\n  return [postData, {\n    data,\n    loading,\n    error\n  }];\n}","map":{"version":3,"sources":["E:/study code/Study Code Project Youtube/Learn Code YouTube/test code javascript/JavaScript/Son Dang/blog-examples/when-to-use-useCallback/queries/hooks/usePost.ts"],"names":["useState","usePost","endpoint","loading","error","setFetchResult","data","setData","postData","input","post","fetch","method","headers","body","JSON","stringify","response","json","err","message"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAMA,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAAgD;AACrD,QAAM;AAAA,OAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD;AAAA,OAAqBC;AAArB,MAAuCL,QAAQ,CAAkB;AACrEG,IAAAA,OAAO,EAAE;AAD4D,GAAlB,CAArD;AAGA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,EAAhC;;AAEA,QAAMQ,QAAkB,GAAG,MAAOC,KAAP,IAAiB;AAC1C,QAAI;AACFJ,MAAAA,cAAc,CAAC;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAd;AAEA,YAAMO,IAAI,GAAG,MAAMC,KAAK,CAACT,QAAD,EAAW;AACjCU,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFwB;AAKjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AAL2B,OAAX,CAAxB;AAQA,YAAMQ,QAAQ,GAAG,MAAMP,IAAI,CAACQ,IAAL,EAAvB;AACAX,MAAAA,OAAO,CAACU,QAAD,CAAP;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZd,MAAAA,cAAc,CAAC;AACbF,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,KAAK,EAAEe,GAAG,CAACC;AAFE,OAAD,CAAd;AAID;;AACDf,IAAAA,cAAc,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAd;AACD,GArBD;;AAuBA,SAAO,CAACK,QAAD,EAAW;AAAEF,IAAAA,IAAF;AAAQH,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAX,CAAP;AACD","sourcesContent":["import { useState } from \"react\"\nimport { FetchResultType } from \"types\"\n\ntype PostType = (input: any) => Promise<any>\ntype UsePostType = [PostType, FetchResultType]\n\nexport function usePost(endpoint: string): UsePostType {\n  const [{ loading, error }, setFetchResult] = useState<FetchResultType>({\n    loading: false,\n  })\n  const [data, setData] = useState<any>()\n\n  const postData: PostType = async (input) => {\n    try {\n      setFetchResult({ loading: true })\n\n      const post = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(input),\n      })\n\n      const response = await post.json()\n      setData(response)\n    } catch (err) {\n      setFetchResult({\n        loading: false,\n        error: err.message,\n      })\n    }\n    setFetchResult({ loading: false })\n  }\n\n  return [postData, { data, loading, error }]\n}\n"]},"metadata":{},"sourceType":"module"}