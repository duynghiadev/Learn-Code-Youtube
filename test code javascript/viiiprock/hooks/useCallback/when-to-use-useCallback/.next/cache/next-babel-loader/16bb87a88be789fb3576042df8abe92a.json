{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useFetch(endpoint) {\n  _s();\n\n  var _useState = useState({\n    loading: false\n  }),\n      fetchResult = _useState[0],\n      setFetchResult = _useState[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setFetchResult({\n                loading: true\n              });\n              _context.next = 4;\n              return fetch(endpoint);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setFetchResult({\n                loading: false\n              });\n              return _context.abrupt(\"return\", data);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              setFetchResult({\n                loading: false,\n                error: _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return [fetchData, {\n    loading: fetchResult.loading,\n    error: fetchResult.error\n  }];\n}\n\n_s(useFetch, \"i6s6SXTJeof2nAeEKSVvvhmN/O0=\");","map":{"version":3,"sources":["E:/study code/Study Code Project Youtube/Learn Code YouTube/test code javascript/JavaScript/Son Dang/blog-examples/when-to-use-useCallback/queries/hooks/useFetch.ts"],"names":["useState","useFetch","endpoint","loading","fetchResult","setFetchResult","fetchData","fetch","response","json","data","error","message"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAMA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAAiD;AAAA;;AAAA,kBAChBF,QAAQ,CAAkB;AAC9DG,IAAAA,OAAO,EAAE;AADqD,GAAlB,CADQ;AAAA,MAC/CC,WAD+C;AAAA,MAClCC,cADkC;;AAKtD,MAAMC,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdD,cAAAA,cAAc,CAAC;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAd;AAFc;AAAA,qBAGSI,KAAK,CAACL,QAAD,CAHd;;AAAA;AAGRM,cAAAA,QAHQ;AAAA;AAAA,qBAIKA,QAAQ,CAACC,IAAT,EAJL;;AAAA;AAIRC,cAAAA,IAJQ;AAKdL,cAAAA,cAAc,CAAC;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAd;AALc,+CAOPO,IAPO;;AAAA;AAAA;AAAA;AAUdL,cAAAA,cAAc,CAAC;AACbF,gBAAAA,OAAO,EAAE,KADI;AAEbQ,gBAAAA,KAAK,EAAE,YAAIC;AAFE,eAAD,CAAd;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATN,SAAS;AAAA;AAAA;AAAA,KAAf;;AAmBA,SAAO,CAAEA,SAAF,EAAa;AAClBH,IAAAA,OAAO,EAAEC,WAAW,CAACD,OADH;AAElBQ,IAAAA,KAAK,EAAEP,WAAW,CAACO;AAFD,GAAb,CAAP;AAID;;GA5BeV,Q","sourcesContent":["import { useState } from \"react\"\nimport { FetchResultType } from \"types\"\n\ntype FetchType = () => Promise<any>\ntype UseFetchType = [FetchType, FetchResultType]\n\nexport function useFetch(endpoint:string): UseFetchType {\n  const [fetchResult, setFetchResult] = useState<FetchResultType>({\n    loading: false,\n  })\n\n  const fetchData = async () => {\n    try {\n      setFetchResult({ loading: true })\n      const response = await fetch(endpoint)\n      const data = await response.json()\n      setFetchResult({ loading: false })\n\n      return data\n\n    } catch (err) {\n      setFetchResult({\n        loading: false,\n        error: err.message,\n      })\n    }\n\n    \n  }\n\n  return [ fetchData, {\n    loading: fetchResult.loading,\n    error: fetchResult.error \n  }]\n}"]},"metadata":{},"sourceType":"module"}