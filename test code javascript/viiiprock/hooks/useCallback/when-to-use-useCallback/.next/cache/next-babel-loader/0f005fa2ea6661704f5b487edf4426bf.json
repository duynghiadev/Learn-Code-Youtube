{"ast":null,"code":"var _jsxFileName = \"E:\\\\study code\\\\Study Code Project Youtube\\\\Learn Code YouTube\\\\test code javascript\\\\JavaScript\\\\Son Dang\\\\blog-examples\\\\when-to-use-useCallback\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect, Fragment } from \"react\";\nimport Head from \"next/head\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\"; // add mock\n\nrequire(\"mocks\");\n\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Todo Task Web App\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["E:/study code/Study Code Project Youtube/Learn Code YouTube/test code javascript/JavaScript/Son Dang/blog-examples/when-to-use-useCallback/pages/_app.tsx"],"names":["useEffect","Fragment","Head","CssBaseline","require","MyApp","props","Component","pageProps","jssStyles","document","querySelector","parentElement","removeChild"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACAC,OAAO,CAAC,OAAD,CAAP;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA2B;AACxC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAyBC,WAAzB,CAAqCJ,SAArC;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARF,CADF;AAYD","sourcesContent":["import { useEffect, Fragment } from \"react\";\nimport Head from \"next/head\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// add mock\nrequire(\"mocks\");\n\nexport default function MyApp(props: any) {\n  const { Component, pageProps } = props;\n\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentElement!.removeChild(jssStyles);\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <Head>\n        <title>Todo Task Web App</title>\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n      </Head>\n\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <Component {...pageProps} />\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}